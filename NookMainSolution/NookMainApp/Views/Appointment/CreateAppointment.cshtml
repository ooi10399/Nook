@model NookMainApp.ViewModels.AppointmentViewModel

@{
    ViewData["Title"] = "Create Appointment";
}

<h2>Making a new appointment..</h2>

<hr />

<div class="row">
    @*@if (Model.Rentee.Image != null)
    {
        <div class="col-md-4">
            <img src="@Url.Content(Model.Rentee.Image)" alt="profile image" width="200" style="object-fit: cover; object-position: left;">
        </div>
    }*@

    <div class="col-md-8">
        <form asp-action="CreateAppointment">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @if (ViewBag.Message != "")
                {
                    <span class="text-danger" id="viewbagMessage">@ViewBag.Message</span>
                }
            </div>
            <div class="form-group">
                <input asp-for="RenteeUserName" class="form-control" value="@Model.Rentee.UserId" hidden />
                <span class="text-danger" id="alertMessage"></span>
            </div>
            <div class="form-group">
                <label asp-for="Rentee.NickName" class="control-label"></label>
                <input asp-for="Rentee.NickName" class="form-control" value="@Model.Rentee.NickName" readonly />
                <span asp-validation-for="Rentee.NickName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StartDateTime" class="control-label"></label>
                <input asp-for="StartDateTime" onchange="checkStartDate()" class="form-control" />
                <span asp-validation-for="StartDateTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDateTime" class="control-label"></label>
                <input asp-for="EndDateTime" onchange="checkEndDate()" class="form-control" />
                <span asp-validation-for="EndDateTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Fees" class="control-label"></label>
                <input asp-for="Fees" class="form-control" value="@Model.Fees" readonly />
                <span asp-validation-for="Fees" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TotalFees" class="control-label"></label>
                <input asp-for="TotalFees" id="TotalFees" class="form-control" readonly />
                <span asp-validation-for="TotalFees" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Remark" class="control-label"></label>
                <textarea asp-for="Remark" class="form-control"></textarea>
                <span asp-validation-for="Remark" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Make appointment" class="btn btn-info" />
                <a href="@Url.Action("getallrentees","rentee")" class="btn btn-outline-info">Back to List</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        //preset a min date
        var earliestDate = new Date(new Date(Date.now()).getTime() + 60 * 60 * 24 * 1000);

        const eDate = timestampToDatetimeInputString(earliestDate);
        document.getElementById('StartDateTime').value = eDate;
        document.getElementById('EndDateTime').value = "";

        function timestampToDatetimeInputString(timestamp) {
            const date = new Date((timestamp + _getTimeZoneOffsetInMs()));
            // slice(0, 19) includes seconds
            return date.toISOString().slice(0, 16);
        }

        function _getTimeZoneOffsetInMs() {
            return new Date().getTimezoneOffset() * -60 * 1000;
        }

        //for calculate total fees
        const fee = document.getElementById("Fees").value;

        function getTotalHour(endTime, startTime) {
            var totalTime = endTime - startTime;
            return Math.ceil(totalTime / 3600000);
        }

        function checkStartDate() {
            document.getElementById("alertMessage").innerHTML = "";
            document.getElementById('EndDateTime').value = "";

            var start = document.getElementById("StartDateTime").value;
            var end = start;

            if (new Date(start) < earliestDate) {
                document.getElementById("alertMessage").innerHTML = "Please select another date or time.";
                document.getElementById("StartDateTime").value = eDate;
            }

            var timeInHour = getTotalHour(end, start);
            var totalFee = timeInHour * fee;
            document.getElementById("TotalFees").value = totalFee;
        }

        function checkEndDate() {
            document.getElementById("alertMessage").innerHTML = "";

            var end = new Date(document.getElementById("EndDateTime").value);
            var start = new Date(document.getElementById("StartDateTime").value);

            if (end < start) {
                document.getElementById("alertMessage").innerHTML = "Please enter a valid end date and time.";
                document.getElementById("EndDateTime").value = "";
                return;
            }

            var timeInHour = getTotalHour(end, start);

            if (timeInHour > 8) {
                document.getElementById("alertMessage").innerHTML = "The appointment cannot more than 8 hours.";
                document.getElementById("EndDateTime").value = ""
                return;
            }
           
            var totalFee = timeInHour * fee;
            document.getElementById("TotalFees").value = totalFee;
        }

    </script>
}


