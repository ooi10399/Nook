@model IEnumerable<NookMainApp.Models.Appointment>

@{
    ViewData["Title"] = "My Appointments";
}

<h2>My Appointments</h2>

<hr />

<table
       id="table"
       data-toggle="table"
       data-search="true">
    <thead>
        <tr>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.RenterUserName)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.StartDateTime)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.EndDateTime)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.Remark)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.RenterUserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDateTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDateTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Remark)
                    </td>
                    <td>
                        @if (item.Status == NookMainApp.Constant.AppointmentStatus.Pending)
                        {
                            <p class="text-warning">
                                @Html.DisplayFor(modelItem => item.Status)
                            </p>
                        }
                        @if (item.Status == NookMainApp.Constant.AppointmentStatus.Completed)
                        {
                            <p class="text-secondary">
                                @Html.DisplayFor(modelItem => item.Status)
                            </p>
                        }
                        @if (item.Status == NookMainApp.Constant.AppointmentStatus.Confirm)
                        {
                            <p class="text-success">
                                @Html.DisplayFor(modelItem => item.Status)
                            </p>
                        }
                    </td>
                    @if (item.Status == NookMainApp.Constant.AppointmentStatus.Pending)
                    {
                        <td>
                            @Html.ActionLink("Update", "EditRenteeAppointment", new { id = item.AppointmentId }) |
                            @Html.ActionLink("Details", "RenteeAppointmentDetails", new { id = item.AppointmentId }) |
                            @Html.ActionLink("Cancel", "DeleteRenteeAppointment", new { id = item.AppointmentId })
                        </td>
                    }
                    @if (item.Status == NookMainApp.Constant.AppointmentStatus.Confirm)
                    {
                        <td>
                            @Html.ActionLink("Details", "RenteeAppointmentDetails", new { id = item.AppointmentId }) |
                            @Html.ActionLink("Cancel", "DeleteRenteeAppointment", new { id = item.AppointmentId })
                        </td>
                    }
                    @if (item.Status == NookMainApp.Constant.AppointmentStatus.Completed || item.Status == NookMainApp.Constant.AppointmentStatus.Cancel)
                    {
                        <td>
                            @Html.ActionLink("Details", "RenteeAppointmentDetails", new { id = item.AppointmentId })
                        </td>
                    }

                </tr>
            }

        }
        else
        {
            <tr>
                <td colspan="8">
                    There is currently no appointment.
                </td>
            </tr>
        }
    </tbody>
</table>
