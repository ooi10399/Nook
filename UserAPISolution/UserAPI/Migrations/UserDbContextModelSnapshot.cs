// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserAPI.Models;

namespace UserAPI.Migrations
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InterestRentee", b =>
                {
                    b.Property<int>("InterestsIntId")
                        .HasColumnType("int");

                    b.Property<int>("RenteesUserId")
                        .HasColumnType("int");

                    b.HasKey("InterestsIntId", "RenteesUserId");

                    b.HasIndex("RenteesUserId");

                    b.ToTable("InterestRentee");
                });

            modelBuilder.Entity("UserAPI.Models.Interest", b =>
                {
                    b.Property<int>("IntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IntName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntId");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            IntId = 1,
                            IntName = "Cafe-hopping"
                        },
                        new
                        {
                            IntId = 2,
                            IntName = "Pottery-making"
                        });
                });

            modelBuilder.Entity("UserAPI.Models.Rentee", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Rentees");

                    b.HasData(
                        new
                        {
                            UserId = 101,
                            About = "Call me queen.",
                            DOB = new DateTime(1974, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "elicam@email.com",
                            Fee = 20.0,
                            FullName = "Elizabeth Cambridge",
                            Gender = "Female",
                            IsActive = true,
                            NickName = "Eli"
                        },
                        new
                        {
                            UserId = 102,
                            About = "Call me king.",
                            DOB = new DateTime(1974, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "philc@email.com",
                            Fee = 20.0,
                            FullName = "Phillip Cambridge",
                            Gender = "Male",
                            IsActive = false,
                            NickName = "Phil"
                        });
                });

            modelBuilder.Entity("UserAPI.Models.Renter", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Renters");

                    b.HasData(
                        new
                        {
                            UserId = 101,
                            About = "Will call you queen.",
                            DOB = new DateTime(1974, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "johndoe@email.com",
                            FullName = "John Doe",
                            Gender = "Male",
                            IsActive = true,
                            NickName = "John"
                        },
                        new
                        {
                            UserId = 102,
                            About = "Will call you king.",
                            DOB = new DateTime(1974, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "janedoe@email.com",
                            FullName = "Jane Doe",
                            Gender = "Female",
                            IsActive = false,
                            NickName = "Jane"
                        });
                });

            modelBuilder.Entity("InterestRentee", b =>
                {
                    b.HasOne("UserAPI.Models.Interest", null)
                        .WithMany()
                        .HasForeignKey("InterestsIntId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserAPI.Models.Rentee", null)
                        .WithMany()
                        .HasForeignKey("RenteesUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
